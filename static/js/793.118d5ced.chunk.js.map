{"version":3,"file":"static/js/793.118d5ced.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://social-network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.module.css","webpack://social-network/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__NZwK2\",\"postsBlock\":\"MyPosts_postsBlock__Iwduv\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__LY2GL\"};","import s from \"./Post.module.css\";\r\n\r\nconst Post = ({message, likeCounts}) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src={require(\"../../../../img/avatar.jpg\")} alt=\"avatar\" />\r\n      {message}\r\n      <div>\r\n        <span>like</span> {likeCounts}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormControls/FormControls\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst MyPosts = ({ posts, addPost }) => {\r\n  const onAddPost = (values) => {\r\n    addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My Posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>\r\n        {posts.map((p) => {\r\n          return (\r\n            <Post message={p.message} likeCounts={p.likesCount} key={p.id} />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"newPostText\"\r\n          validate={[required, maxLength30]}\r\n          placeholder=\"Post message\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: \"addNewPostForm\" })(\r\n  AddNewPostForm\r\n);\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { addPostCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"ProfileInfo_description__+xwZ2\",\"about\":\"ProfileInfo_about__H5gVk\",\"name\":\"ProfileInfo_name__6qYCZ\",\"background\":\"ProfileInfo_background__eRP--\",\"status\":\"ProfileInfo_status__kwrkm\",\"statusInput\":\"ProfileInfo_statusInput__9kI31\"};","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div className={s.status}>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status || \"***\"}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            className={s.statusInput}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            onChange={onStatusChange}\r\n            value={status}\r\n          ></input>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import Preloader from \"../../common/Preloader/Preloader\";\r\nimport background from \"./../../../img/sunback.jpg\";\r\nimport userPhoto from \"./../../../img/user.jpg\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={s.background}>\r\n        <img src={background} alt=\"background\" />\r\n      </div>\r\n      <div className={s.description}>\r\n        <div>\r\n          <img\r\n            src={\r\n              profile.photos.large != null ? profile.photos.large : userPhoto\r\n            }\r\n            alt=\"avatar\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <div className={s.name}>{profile.fullName}</div>\r\n          <div className={s.about}>{profile.aboutMe}</div>\r\n        </div>\r\n      </div>\r\n      <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={s.profile}>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { withRouter } from \"../../hoc/withRouter\";\r\nimport { getStatus, getUser, updateStatus } from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.router.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authUserId;\r\n      // if (!userId) {\r\n      //   debugger;\r\n      //   this.props.router.history.push(\"/login\");\r\n      // }\r\n    }\r\n    this.props.getUser(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUser, getStatus, updateStatus }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate replace to=\"/login\" />;\r\n\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n"],"names":["message","likeCounts","className","s","src","require","alt","maxLength30","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","posts","addPost","values","newPostText","map","p","likesCount","id","connect","state","profilePage","dispatch","addPostCreator","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","profile","background","photos","large","userPhoto","fullName","aboutMe","Preloader","ProfileContainer","userId","this","router","params","authUserId","getUser","getStatus","React","compose","auth","isAuth","withRouter","withAuthRedirect","mapStateToPropsForRedirect","Component","RedirectComponent","replace","to"],"sourceRoot":""}