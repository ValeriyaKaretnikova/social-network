{"version":3,"file":"static/js/672.c4b5b3bb.chunk.js","mappings":"6PACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAAwI,sBAAxI,EAA0M,0BAA1M,EAA8O,yBAA9O,EAAwR,gC,SCaxR,EAXmB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC9B,OACE,iBAAKC,UAAWC,EAAhB,WACE,gBAAKC,IAAKC,EAAAA,KAAAA,CAAQ,KAAkBJ,EAAQ,QAASK,IAAI,YACzD,SAAC,KAAD,CAASJ,UAAWC,EAAQI,GAAE,UAAK,YAAcR,GAAjD,SACGC,MAIR,ECND,EAJgB,SAAC,GAAiB,IAAfQ,EAAc,EAAdA,QACjB,OAAO,gBAAKN,UAAWC,EAAhB,SAA4BK,GACpC,ECGKC,GAAcC,EAAAA,EAAAA,IAAiB,IA2C/BC,GAAsBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAlBD,EAhBL,SAACE,GACtB,OACE,kBAAMC,SAAUD,EAAME,aAAtB,WACE,SAACC,EAAA,EAAD,CACEC,UAAWC,EAAAA,EACXnB,KAAK,iBACLoB,YAAY,qBACZC,SAAU,CAACC,EAAAA,GAAUb,MAEvB,0BACE,yCAIP,IAKD,EA5CgB,SAAC,GAAkC,IAAhCc,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YACxBC,EAAUF,EAAYE,QAAQC,KAAI,SAACC,GACvC,OAAO,SAAC,EAAD,CAAY3B,KAAM2B,EAAE3B,KAAMD,GAAI4B,EAAE5B,GAAIE,MAAO0B,EAAE1B,OAAY0B,EAAE5B,GACnE,IAEK6B,EAAWL,EAAYK,SAASF,KAAI,SAACG,GACzC,OAAO,SAAC,EAAD,CAASrB,QAASqB,EAAErB,SAAcqB,EAAE9B,GAC5C,IAMD,OACE,iBAAKG,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SAAiCsB,KACjC,iBAAKvB,UAAWC,EAAhB,WACE,yBAAMyB,KACN,gBAAK1B,UAAWC,EAAhB,UACE,SAACQ,EAAD,CAAqBI,SAVP,SAACe,GACrBN,EAAYM,EAAOC,eACpB,WAaF,ECbD,GAAeC,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAfsB,SAACC,GACvB,MAAO,CACLX,YAAaW,EAAMC,YAEtB,IAE0B,SAACC,GAC1B,MAAO,CACLZ,YAAa,SAACO,GACZK,GAASC,EAAAA,EAAAA,GAAmBN,GAC7B,EAEJ,IAICO,EAAAA,EAFF,CAGEC,E,kJCnBIC,EAA6B,SAACN,GAAD,MAAY,CAC7CO,OAAQP,EAAMQ,KAAKD,OADc,EAItBH,EAAmB,SAACK,GAAe,IACxCC,EADuC,0IAE3C,WACE,OAAKC,KAAK/B,MAAM2B,QAET,SAACE,GAAD,UAAeE,KAAK/B,SAFI,SAAC,KAAD,CAAUgC,SAAO,EAACvC,GAAG,UAGrD,KAN0C,GACbwC,EAAAA,WAYhC,OAJqCd,EAAAA,EAAAA,IAAQO,EAARP,CACnCW,EAIH,C","sources":["webpack://social-network/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__HlgIh\",\"dialogsItems\":\"Dialogs_dialogsItems__HLdkI\",\"dialog\":\"Dialogs_dialog__+CTmi\",\"link\":\"Dialogs_link__6wYf5\",\"active\":\"Dialogs_active__gM5xD\",\"messages\":\"Dialogs_messages__nNHxH\",\"message\":\"Dialogs_message__s9f+1\",\"newMessageArea\":\"Dialogs_newMessageArea__VuU5u\"};","import { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst DialogItem = ({ id, name, image }) => {\r\n  return (\r\n    <div className={s.dialog}>\r\n      <img src={require(\"../../../img/\" + image + \".jpg\")} alt=\"avatar\" />\r\n      <NavLink className={s.link} to={`${\"/dialogs/\" + id}`}>\r\n        {name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = ({ message }) => {\r\n  return <div className={s.message}>{message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\nimport { Textarea } from \"../common/FormControls/FormControls\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst Dialogs = ({ dialogsData, sendMessage }) => {\r\n  const dialogs = dialogsData.dialogs.map((d) => {\r\n    return <DialogItem name={d.name} id={d.id} image={d.image} key={d.id} />;\r\n  });\r\n\r\n  const messages = dialogsData.messages.map((m) => {\r\n    return <Message message={m.message} key={m.id} />;\r\n  });\r\n\r\n  const addNewMessage = (values) => {\r\n    sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogs}</div>\r\n      <div className={s.messages}>\r\n        <div>{messages}</div>\r\n        <div className={s.newMessageArea}>\r\n          <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={Textarea}\r\n        name=\"newMessageBody\"\r\n        placeholder=\"Enter your message\"\r\n        validate={[required, maxLength50]}\r\n      ></Field>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\r\n  AddMessageForm\r\n);\r\nexport default Dialogs;\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsData: state.dialogsPage,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate replace to=\"/login\" />;\r\n\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n"],"names":["id","name","image","className","s","src","require","alt","to","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","dialogsData","sendMessage","dialogs","map","d","messages","m","values","newMessageBody","compose","connect","state","dialogsPage","dispatch","sendMessageCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","replace","React"],"sourceRoot":""}