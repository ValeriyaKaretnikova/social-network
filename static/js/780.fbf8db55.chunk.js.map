{"version":3,"file":"static/js/780.fbf8db55.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://social-network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.module.css","webpack://social-network/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__NZwK2\",\"postsBlock\":\"MyPosts_postsBlock__Iwduv\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__LY2GL\",\"message\":\"Post_message__BjrB4\"};","import s from \"./Post.module.css\";\r\n\r\nconst Post = ({ message, likeCounts }) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <div className={s.message}>\r\n        <img src={require(\"../../../../img/back.jpg\")} alt=\"avatar\" />\r\n        <div className={s.text}>{message}</div>\r\n      </div>\r\n\r\n      <div>\r\n        <span>❤️</span> {likeCounts}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormControls/FormControls\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst MyPosts = ({ posts, addPost }) => {\r\n  const onAddPost = (values) => {\r\n    addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My Posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>\r\n        {posts.map((p) => {\r\n          return (\r\n            <Post message={p.message} likeCounts={p.likesCount} key={p.id} />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"newPostText\"\r\n          validate={[required, maxLength30]}\r\n          placeholder=\"Post message\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: \"addNewPostForm\" })(\r\n  AddNewPostForm\r\n);\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { addPostCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"ProfileInfo_description__+xwZ2\",\"avatar\":\"ProfileInfo_avatar__0+6fK\",\"profileData\":\"ProfileInfo_profileData__oaE32\",\"mainInfo\":\"ProfileInfo_mainInfo__6pGFc\",\"name\":\"ProfileInfo_name__6qYCZ\",\"background\":\"ProfileInfo_background__eRP--\",\"status\":\"ProfileInfo_status__kwrkm\",\"statusInput\":\"ProfileInfo_statusInput__9kI31\",\"photoLoader\":\"ProfileInfo_photoLoader__kEh+j\",\"contacts\":\"ProfileInfo_contacts__NqNWe\",\"contact\":\"ProfileInfo_contact__wH+lp\",\"c\":\"ProfileInfo_c__oVfTk\",\"error\":\"ProfileInfo_error__b7oon\"};","import { Field, reduxForm } from \"redux-form\";\r\nimport { Input, Textarea } from \"../../common/FormControls/FormControls\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className={s.profileData}>\r\n        <div className={s.mainInfo}>\r\n          <div>\r\n            <b>Full name: </b>\r\n            <Field\r\n              name={\"fullName\"}\r\n              placeholder={\"Full name\"}\r\n              component={Input}\r\n            ></Field>\r\n          </div>\r\n\r\n          <div>\r\n            <b>Looking for a job? </b>\r\n            <Field\r\n              name={\"lookingForAJob\"}\r\n              placeholder={\"\"}\r\n              component={Input}\r\n              type={\"checkbox\"}\r\n            ></Field>\r\n          </div>\r\n\r\n          <div>\r\n            <b>My professional skills: </b>\r\n            <Field\r\n              name={\"lookingForAJobDescription\"}\r\n              placeholder={\"My professional skills\"}\r\n              component={Textarea}\r\n            ></Field>\r\n          </div>\r\n\r\n          <div className={s.about}>\r\n            <b>About me: </b>\r\n            <Field\r\n              name={\"aboutMe\"}\r\n              placeholder={\"About me\"}\r\n              component={Textarea}\r\n            ></Field>\r\n          </div>\r\n\r\n          <div className={s.photoLoader}>\r\n            <button onClick={() => {}}>Save</button>\r\n          </div>\r\n          {error && <span className={s.error}>{error}</span>}\r\n        </div>\r\n        <div className={s.c}>\r\n          <b>Contacts: </b>\r\n          {Object.keys(profile.contacts).map((key) => {\r\n            return (\r\n              <div className={s.contact} key={key}>\r\n                <Field\r\n                  placeholder={key}\r\n                  name={\"contacts.\" + key}\r\n                  component={Input}\r\n                ></Field>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfileDataReduxForm = reduxForm({\r\n  form: \"editProfile\",\r\n})(ProfileDataForm);\r\n\r\nexport default ProfileDataReduxForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div className={s.status}>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status || \"***\"}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            className={s.statusInput}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            onChange={onStatusChange}\r\n            value={status}\r\n          ></input>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import { useState } from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport background from \"./../../../img/sunback.jpg\";\r\nimport userPhoto from \"./../../../img/user.jpg\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  savePhoto,\r\n  saveProfile,\r\n}) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const onPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSaveProfile = (formData) => {\r\n    saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={s.background}>\r\n        <img src={background} alt=\"background\" />\r\n      </div>\r\n      <div className={s.description}>\r\n        <div className={s.avatar}>\r\n          <img\r\n            src={\r\n              profile.photos.large != null ? profile.photos.large : userPhoto\r\n            }\r\n            alt=\"avatar\"\r\n          />\r\n          {isOwner ? (\r\n            <ProfileStatusWithHooks\r\n              status={status}\r\n              updateStatus={updateStatus}\r\n            />\r\n          ) : (\r\n            <div className={s.status}>{status}</div>\r\n          )}\r\n        </div>\r\n\r\n        {editMode ? (\r\n          <ProfileDataForm\r\n            isOwner={isOwner}\r\n            onPhotoSelected={onPhotoSelected}\r\n            onSubmit={onSaveProfile}\r\n            initialValues={profile}\r\n            profile={profile}\r\n          />\r\n        ) : (\r\n          <ProfileData\r\n            profile={profile}\r\n            isOwner={isOwner}\r\n            onPhotoSelected={onPhotoSelected}\r\n            goToEditMode={() => setEditMode(true)}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, onPhotoSelected, goToEditMode }) => {\r\n  return (\r\n    <div className={s.profileData}>\r\n      <div className={s.mainInfo}>\r\n        <div className={s.name}>{profile.fullName}</div>\r\n        <div>\r\n          <b>Looking for a job: </b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob && (\r\n          <div>\r\n            <b>My skills: </b> {profile.lookingForAJobDescription}\r\n          </div>\r\n        )}\r\n        <div className={s.about}>\r\n          <b>About me: </b> {profile.aboutMe ?? \"*****\"}\r\n        </div>\r\n\r\n        <div className={s.photoLoader}>\r\n          {isOwner && <input type={\"file\"} onChange={onPhotoSelected} />}\r\n        </div>\r\n        <div className={s.photoLoader}>\r\n          {isOwner && <button onClick={goToEditMode}>Edit</button>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className={s.contacts}>\r\n        <b>Contacts:</b>\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <Contact\r\n              key={key}\r\n              contactTitle={key}\r\n              contactValue={profile.contacts[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={s.contact}>\r\n      <b>{contactTitle}: </b>\r\n      {contactValue}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={s.profile}>\r\n      <ProfileInfo\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        savePhoto={props.savePhoto}\r\n        saveProfile={props.saveProfile}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { withRouter } from \"../../hoc/withRouter\";\r\nimport {\r\n  getStatus,\r\n  getUser,\r\n  savePhoto,\r\n  saveProfile,\r\n  updateStatus,\r\n} from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.router.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authUserId;\r\n      if (!userId) {\r\n        this.props.router.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUser(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.router.params.userId !== prevProps.router.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        isOwner={!this.props.router.params.userId}\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n        saveProfile={this.props.saveProfile}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUser,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate replace to=\"/login\" />;\r\n\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n"],"names":["message","likeCounts","className","s","src","require","alt","maxLength30","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","posts","addPost","values","newPostText","map","p","likesCount","id","connect","state","profilePage","dispatch","addPostCreator","MyPosts","profile","error","Input","type","onClick","Object","keys","contacts","key","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileData","isOwner","onPhotoSelected","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","savePhoto","saveProfile","Preloader","target","files","length","background","photos","large","userPhoto","formData","then","initialValues","ProfileContainer","userId","this","router","params","authUserId","history","push","getUser","getStatus","refreshProfile","prevProps","prevState","React","compose","auth","isAuth","withRouter","withAuthRedirect","mapStateToPropsForRedirect","Component","RedirectComponent","replace","to"],"sourceRoot":""}